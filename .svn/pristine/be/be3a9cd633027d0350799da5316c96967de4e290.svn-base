package com.thp.structureaddress.webservice.custroubleworkerorder.impl;

import javax.jws.WebService;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;

import com.thp.structureaddress.model.custroubleworkerorder.CusTroubleWorkOrderInfo;
import com.thp.structureaddress.service.custroubleworkerorder.GetCustomerTroubleWorkOrderInfoService;
import com.thp.structureaddress.webservice.custroubleworkerorder.GetCustomerTroubleWorkOrderInfoWebService;
import com.thp.structureaddress.webservice.custroubleworkerorder.model.CommonDataResponse;
import com.thp.structureaddress.webservice.custroubleworkerorder.model.Root;
import com.thp.structureaddress.webservice.custroubleworkerorder.model.UploadRepairInfoRequest;

/**
 * 
 * @author dingjinyang
 * 保障工单获取抢修信息服务
 */
@WebService(serviceName="GetCustomerTroubleWorkOrderInfoService",targetNamespace="http://repairBillInfoReceive.server.webservice.ksfd.gzkit.com")
@Controller
public class GetCustomerTroubleWorkOrderInfoWebServiceImpl implements GetCustomerTroubleWorkOrderInfoWebService {

	private Logger logger=Logger.getLogger(GetCustomerTroubleWorkOrderInfoWebServiceImpl.class);
	@Autowired
	private GetCustomerTroubleWorkOrderInfoService customerTroubleWorkOrderInfoService;
	
	
	@Override
	public CommonDataResponse getCustomerTroubleWorkOrderInfo(UploadRepairInfoRequest repairInfoRequest) {
		logger.info("调用保障工单获取抢修信息接口-----------------");
		CommonDataResponse commonDataResponse=new CommonDataResponse();
		boolean status=false;
		if(repairInfoRequest==null||repairInfoRequest.getCommonDataRequest()==null||
				repairInfoRequest.getCommonDataRequest().getRoot()==null){
			commonDataResponse.setReployCode("FAIL");
			commonDataResponse.setReplyDesc("接收客服工单抢修信息失败，请重新发送");
			return commonDataResponse;
		}
		
		
		CusTroubleWorkOrderInfo workerOrderInfo=transRootToCusTroubleWorkOrderInfo(repairInfoRequest.getCommonDataRequest().getRoot());
		status=customerTroubleWorkOrderInfoService.add(workerOrderInfo);
		if(status){
			commonDataResponse.setReployCode("OK");
			commonDataResponse.setReplyDesc("保存客服工单抢修信息数据成功");
		}else{
			commonDataResponse.setReployCode("FAIL");
			commonDataResponse.setReplyDesc("保存客服工单抢修信息数据失败");
		}
		
		return commonDataResponse;
	}

	
	/**
	 * 对象转换
	 * @param root
	 * @return
	 */
	private CusTroubleWorkOrderInfo transRootToCusTroubleWorkOrderInfo(Root root){
		CusTroubleWorkOrderInfo workOrderInfo=new CusTroubleWorkOrderInfo();
		if(StringUtils.isNotEmpty(root.getTaskId())){
			workOrderInfo.setTaskId(root.getTaskId());
		}
		workOrderInfo.setTaskStatusDescribe(root.getTaskStatusDescribe());
		if(root.getRepairBill()==null)
			return workOrderInfo;
		
		
		workOrderInfo.setRepairBill(root.getRepairBill());
		return workOrderInfo;
	}
}
